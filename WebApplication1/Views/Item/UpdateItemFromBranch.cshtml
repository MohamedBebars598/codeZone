@model WebApplication1.Models.AddUpdateItemViewModel

@{
    ViewData["Title"] = "Update Item";
}


<div>
    
  <div>
      <h1>Update Item</h1>
    <h4 class="text-danger">Please fill all inputs</h4>
    <a asp-route-id="@Model.BranchID" class="text-success" asp-controller="Item" asp-action="Index"><i class="fa-solid fa-circle-arrow-left fs-2"></i></a>
</div>
    <hr />



<div class="row">
    <div class="col-md-4">
        <form method="post" asp-route-oldId="@Model.OldItemID" asp-route-id="@Model.BranchID" asp-controller="item" asp-action="UpdateItemFromBranch">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
              <div class="form-group">
                <label  class="control-label">Choose Another Item</label>
                <select name="ItemId" class="form-select" aria-label="Default select example">
                       <option   selected>Open this select Name</option>
                            @for(int i=0;i<@Model.ItemNames.Count;i++){
                                  <option value="@Model.ItemIds[i]">@Model.ItemNames[i]</option>

                            }
                         
                </select>
                <span asp-validation-for="@Model.ItemIds" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Quantity" class="control-label"></label>
                <input asp-for="@Model.Quantity" class="form-control" />
                <span asp-validation-for="@Model.Quantity" class="text-danger"></span>
            </div>
            <div class="form-group my-2">
                <input type="submit" value="Update" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}